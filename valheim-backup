#!/bin/bash
# valheim-backups runs permanently if BACKUPS=true
# and creates backups of the /config/worlds directory.

# Include defaults
. /usr/local/etc/valheim/defaults
. /usr/local/etc/valheim/common

# Remove trailing slash if any
BACKUPS_DIRECTORY=${BACKUPS_DIRECTORY%/}
pidfile=$valheim_backup_pidfile
next_backup=$(date +%s)
run=true


main() {
    if (set -o noclobber; echo $$ > "$pidfile") 2> /dev/null; then
        trap backup_now SIGHUP
        trap shutdown SIGINT SIGTERM
        trap 'error_handler $? $LINENO $BASH_LINENO "$BASH_COMMAND" $(printf "::%s" ${FUNCNAME[@]}); trap - ERR' ERR

        cd /config || fatal "Could not cd /config"
        while [ $run = true ]; do
            backup
            flush_old
            next_backup=$(($(date +%s)+BACKUPS_INTERVAL))
            while [ $run = true ] && [ "$(date +%s)" -lt $next_backup ]; do
                sleep 8
            done
        done
    else
        info "Found existing pid file - checking process"
        check_lock "$pidfile"
    fi
}


backup() {
    local backup_file
    if [ ! -d "/config/worlds" ]; then
        debug "No Valheim worlds to backup"
        return
    fi
    backup_file="$BACKUPS_DIRECTORY/worlds-$(date +%Y%m%d-%H%M%S).zip"
    pre_backup_hook "$backup_file"
    info "Backing up Valheim server worlds to $backup_file"
    mkdir -p "$BACKUPS_DIRECTORY"
    chmod "$BACKUPS_DIRECTORY_PERMISSIONS" "$BACKUPS_DIRECTORY"
    zip -r "$backup_file" "worlds/"
    chmod "$BACKUPS_FILE_PERMISSIONS" "$backup_file"
    post_backup_hook "$backup_file"
}


pre_backup_hook() {
    local backup_file
    local pre_hook_cmd
    if [ -n "$PRE_BACKUP_HOOK" ]; then
        backup_file=$1
        pre_hook_cmd=${PRE_BACKUP_HOOK//@BACKUP_FILE@/$backup_file}
        info "Running pre backup hook: $pre_hook_cmd"
        eval "$pre_hook_cmd"
    fi
}


post_backup_hook() {
    local backup_file
    local post_hook_cmd
    if [ -n "$POST_BACKUP_HOOK" ]; then
        backup_file=$1
        post_hook_cmd=${POST_BACKUP_HOOK//@BACKUP_FILE@/$backup_file}
        info "Running post backup hook: $post_hook_cmd"
        eval "$post_hook_cmd"
    fi
}


flush_old() {
    if [ ! -d "$BACKUPS_DIRECTORY" ]; then
        debug "No old backups to remove"
        return
    fi
    info "Removing backups older than $BACKUPS_MAX_AGE days"
    find "$BACKUPS_DIRECTORY" -type f -mmin "+$((BACKUPS_MAX_AGE*60*24))" -name 'worlds-*.zip' -print -exec rm -f "{}" \;
}


# This is a signal handler registered to SIGHUP
backup_now() {
    debug "Received signal to backup world"
    next_backup=0
}


shutdown() {
    debug "Received signal to shut down valheim-backup"
    clear_lock "$pidfile"
    run=false
}


if [ "$BACKUPS" = true ]; then
    main
else
    info "Backups have been turned off by env BACKUPS=$BACKUPS"
    supervisorctl stop valheim-backup
fi
