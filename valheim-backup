#!/bin/bash

BACKUPS=${BACKUPS:-true}
BACKUPS_INTERVAL=${BACKUPS_INTERVAL:-3600}
BACKUPS_DIRECTORY=${BACKUPS_DIRECTORY:-/config/backups}
BACKUPS_MAX_AGE=${BACKUPS_MAX_AGE:-3}
BACKUPS_DIRECTORY_PERMISSIONS=${BACKUPS_DIRECTORY_PERMISSIONS:-755}
BACKUPS_FILE_PERMISSIONS=${BACKUPS_FILE_PERMISSIONS:-644}
AWS=${AWS:-false}
S3_PATH=${S3_PATH:-s3://example-bucket}

# Remove trailing slash if any
BACKUPS_DIRECTORY=${BACKUPS_DIRECTORY%/}

main() {
    cd /config
    while :; do
        backup
        flush_old
        echo "Waiting $BACKUPS_INTERVAL seconds before next backup run"
        sleep $BACKUPS_INTERVAL
    done
}

backup() {
    if [ ! -d "/config/worlds" ]; then
        echo "No Valheim worlds to backup"
        return
    fi
    local backup_file="$BACKUPS_DIRECTORY/worlds-$(date +%Y%m%d-%H%M%S).zip"
    echo "Backing up Valheim server worlds to $backup_file"
    mkdir -p "$BACKUPS_DIRECTORY"
    chmod $BACKUPS_DIRECTORY_PERMISSIONS "$BACKUPS_DIRECTORY"
    zip -r "$backup_file" "worlds/"
    chmod $BACKUPS_FILE_PERMISSIONS "$backup_file"
    if [ $AWS == true ]; then
        aws s3 sync $backup_file $S3_PATH --no-progress
    fi
}

flush_old() {
    if [ ! -d "$BACKUPS_DIRECTORY" ]; then
        echo "No old backups to remove"
        return
    fi
    echo "Removing backups older than $BACKUPS_MAX_AGE days"
    find "$BACKUPS_DIRECTORY" -type f -mtime +$BACKUPS_MAX_AGE -name 'worlds-*.zip' -print -exec rm -f "{}" \;
}

if [ "X$BACKUPS" = Xtrue ]; then
    main
else
    echo "Backups have been turned off by env BACKUPS=$BACKUPS"
    supervisorctl stop valheim-backup
fi
